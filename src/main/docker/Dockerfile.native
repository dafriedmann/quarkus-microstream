####
# This Dockerfile is used in order to build a container that runs the Quarkus application in native (no JVM) mode
#
# Before building the container image run:
#
# ./mvnw package -Pnative
#
# Then, build the image with:
#
# docker build -f src/main/docker/Dockerfile.native -t quarkus/quarkus-microstream .
#
# Then run the container using:
#
# docker run -i --rm -p 8080:8080 quarkus/quarkus-microstream
#
###

## Stage 1 : build with maven builder image with native capabilities
FROM quay.io/quarkus/ubi-quarkus-native-image:21.2.0-java11 AS build
USER root
RUN mkdir /code && chown -R quarkus /code
COPY pom.xml /code/
COPY mvnw /code/mvnw
COPY .mvn /code/.mvn
USER quarkus
WORKDIR /code
COPY ./src /code/src
RUN mkdir target \
   && ./mvnw -B org.apache.maven.plugins:maven-dependency-plugin:3.1.2:go-offline \
   && ./mvnw package -Pnative

## Stage 2 : create the docker final image
FROM registry.access.redhat.com/ubi8/ubi-minimal:8.4
WORKDIR /work/
COPY --from=build /code/target/*-runner /work/application
# set up permissions for user `1001`
RUN chmod 775 /work /work/application \
  && chown -R 1001 /work \
  && chmod -R "g+rwX" /work \
  && chown -R 1001:root /work

EXPOSE 8080
USER 1001

CMD ["./application", "-Dquarkus.http.host=0.0.0.0"]